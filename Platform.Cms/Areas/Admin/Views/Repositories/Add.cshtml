@using EvilDuck.Framework.Core.Web.Mvc
@model EvilDuck.Platform.Cms.Areas.Admin.Models.Repositories.CreateRepositoryViewModel

@{
    this.InitializeScreen("Dodawanie repozyturiów zapytań", 6);
}

@using (Html.BeginForm())
{
    @Html.ValidationSummary(true)
    <div class="form-group">
        @Html.LabelFor(e => e.Name)
        @Html.TextBoxFor(e => e.Name, new { @class = "form-control" })
        @Html.ValidationMessageFor(e => e.Name)
    </div>
    <div class="form-group">
        @Html.LabelFor(e => e.Caption)
        @Html.TextBoxFor(e => e.Caption, new { @class = "form-control" })
        @Html.ValidationMessageFor(e => e.Caption)
    </div>
    <div class="form-group">
        @Html.LabelFor(e => e.SelectQueries)
        @Html.ListBoxFor(e => e.SelectQueries, Model.AllSelectQueries.Select(q => new SelectListItem
        {
            Text = q.Value,
            Value = q.Key
        }), new { @class = "form-control" })
    </div>
    <div class="form-group">
        @Html.LabelFor(e => e.InsertQuery)
        @Html.DropDownListFor(e => e.InsertQuery, Model.AllInsertQueries.Select(q => new SelectListItem
        {
            Text = q.Value,
            Value = q.Key
        }), new { @class = "form-control" })
    </div>
    <div class="form-group">
        @Html.LabelFor(e => e.UpdateQuery)
        @Html.DropDownListFor(e => e.UpdateQuery, Model.AllUpdateQueries.Select(q => new SelectListItem
        {
            Text = q.Value,
            Value = q.Key
        }), new { @class = "form-control" })
    </div>
    <div class="form-group">
        @Html.LabelFor(e => e.DeleteQuery)
        @Html.DropDownListFor(e => e.DeleteQuery, Model.AllDeleteQueries.Select(q => new SelectListItem
        {
            Text = q.Value,
            Value = q.Key
        }), new { @class = "form-control" })
    </div>
    <hr />
    <button class="btn btn-primary" type="submit">
        Zapisz
    </button>
}


